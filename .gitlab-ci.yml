include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - lint
  - test
  - security

variables:
  PIP_DISABLE_PIP_VERSION_CHECK: '1'
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

before_script:
  - python --version
  - curl -LsSf https://astral.sh/uv/install.sh | sh
  - export PATH="$HOME/.local/bin:$PATH"
  - export UV_LINK_MODE="copy"
  - uv venv
  - uv pip install --upgrade pip
  - uv pip install ruff bandit detect-secrets pip-audit
  - source .venv/bin/activate

ruff:
  stage: lint
  script:
    - cd "$CI_PROJECT_DIR"
    - ruff check .
    - ruff format --check .
  tags:
    - linux

bandit:
  stage: security
  script:
    - cd "$CI_PROJECT_DIR"
    - bandit -r "$CI_PROJECT_DIR" -x "$CI_PROJECT_DIR/.venv,$CI_PROJECT_DIR/tests" -v
  tags:
    - linux

detect_secrets:
  stage: security
  script:
    - cd "$CI_PROJECT_DIR"
    - detect-secrets scan --all-files --exclude-files '\.git/config' > .secrets.baseline
  tags:
    - linux

pip_audit:
  stage: security
  script:
    - cd "$CI_PROJECT_DIR"
    - pip-audit
  tags:
    - linux

trivy_fs_scan:
  stage: security
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - cd "$CI_PROJECT_DIR"
    - trivy fs --exit-code 1 --severity HIGH,CRITICAL .
  allow_failure: false
  tags:
    - linux

trivy_python_image_scan:
  stage: security
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy image --exit-code 1 --severity HIGH,CRITICAL python:3.12-bookworm
  allow_failure: false
  tags:
    - linux 
